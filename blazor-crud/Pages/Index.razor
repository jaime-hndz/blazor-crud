@page "/"

<PageTitle>Index</PageTitle>

<h1>Dealer</h1>

<a href="/create" class="btn btn-success">Insertar automovil</a>

<table class='table table-responsive table-striped'>
    <thead>
        <tr>
            <th>ID</th>
            <th>Chasis</th>
            <th>Marca </th>
            <th>Modelo</th>
            <th>Color </th>
            <th>Año</th>
            <th>Comentario</th>
            <th>Foto </th>
            <th>Opciones</th>
        </tr>
    </thead>
    <tbody>
        @if(_posts != null)
        {
            foreach (var post in _posts)
            {
                <tr>
                    <td>@post.Id</td> 
                    <td>@post.Chasis</td>
                    <td>@post.Marca</td>
                    <td>@post.Modelo</td>
                    <td>@post.Color</td>
                    <td>@post.Year</td>
                    <td>@post.Comentario</td>
                    <td>@post.Foto</td>
                    <td>
                        <a href="/update/@post.Id" class="btn btn-warning">Actualizar</a>
                        <button @onclick="() => DeletePostAsync(post)" class="btn btn-danger">Eliminar</button>
                    </td>


                </tr>
            }
        }
    </tbody>
</table>


@inject IJSRuntime JsRuntime
@code {
    private List<Post> _posts = null;

    protected override async  Task OnInitializedAsync()
    {
        using var context = new CrudDbContext();
        _posts = await context.Posts.ToListAsync();
    }

    private async Task DeletePostAsync(Post postToDelete)
    {
        using var contex = new CrudDbContext();
        contex.Posts.Remove(postToDelete);

        if(await contex.SaveChangesAsync() > 0)
        {
            _posts.Remove(postToDelete);
        }
        else
        {
            string errorMessage = $"ERROR: Failed to delete post \"{postToDelete.Id}\"";
            await JsRuntime.InvokeVoidAsync("alert", errorMessage);
        }
    }

}
